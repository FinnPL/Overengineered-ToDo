name: Build and Publish Containers

on:
  push:
    branches:
      - main
      - staging
    paths:
      - api/**
      - .github/workflows/build-and-publish.yml
  pull_request:
    branches:
      - main
      - staging
    paths:
      - api/**
      - .github/workflows/build-and-publish.yml
  release:
    types:
      - published

jobs:
  build-and-push:
    name: Build ${{ matrix.service }} image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - service: userservice
            dockerfile: cmd/userservice/Dockerfile
          - service: todoservice
            dockerfile: cmd/todoservice/Dockerfile
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/overengineered-${{ matrix.service }}
          tags: |
            type=sha,format=long,prefix=sha-
            type=ref,event=tag
            type=raw,value=prod,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=staging,enable=${{ github.ref == 'refs/heads/staging' }}
          flavor: |
            latest=false

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          file: ./api/${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
